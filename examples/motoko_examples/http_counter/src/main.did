type CallbackStrategy = record {
  token : Token;
  callback : func (Token) -> (StreamingCallbackHttpResponse) query;
};
type HttpRequest = record {
  url : text;
  method : text;
  body : blob;
  headers : vec record { text; text };
};
type HttpResponse = record {
  body : blob;
  headers : vec record { text; text };
  upgrade : opt bool;
  streaming_strategy : opt StreamingStrategy;
  status_code : nat16;
};
type StreamingCallbackHttpResponse = record { token : opt Token; body : blob };
type StreamingStrategy = variant { Callback : CallbackStrategy };
type Token = record { arbitrary_data : text };
service : () -> {
  http_request : (HttpRequest) -> (HttpResponse) query;
  http_request_update : (HttpRequest) -> (HttpResponse);
  http_streaming : (Token) -> (StreamingCallbackHttpResponse) query;
}
